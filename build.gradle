apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

ext {
     raspberryHost = '192.168.1.95'
}

configurations {
    sshAntTask
}

repositories {
    mavenCentral()
    maven {
        url "https://repo.eclipse.org/content/repositories/paho-releases/"
    }
}

task full_jar(type: Jar, dependsOn: classes) {
	manifest {
		attributes 'Main-Class': "org.jboss.summit2015.beacon.HCIDumpParser"
	}
	//from configurations.compile.collect {it.directory ? it : zipTree(it)}
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from configurations.runtime.asFileTree.files.collect { zipTree(it) }
	from files(compileJava)
	baseName = "${project.archivesBaseName}-full"
}

task runStreamServer(type: JavaExec, dependsOn: classes) {
    main = 'org.jboss.summit2015.beacon.HCIDumpParser'
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
    args = ['-rawDumpFile', '/tmp/hcidump.raw', 'stream']
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

// Sample task which uses the scp Ant optional task.
task copy_jar(dependsOn: full_jar) << {
    description = 'Copy full_jar output to remote server.'

    /* Get passphrase from user input.
    def console = System.console()
    def passphrase = console.readPassword('%s: ', "Please enter the sshPassword for root@${raspberryHost}")
    */

    // Redefine scp Ant task, with the classpath property set to our newly defined
    // sshAntTask configuration classpath.
    ant.taskdef(name: 'scp', classname: 'org.apache.tools.ant.taskdefs.optional.ssh.Scp',
            classpath: configurations.sshAntTask.asPath)

    // Invoke the scp Ant task. (Use gradle -i update to see the output of the Ant task.)
    ant.scp(todir: "root@${raspberryHost}:",
            // sshPassword: passphrase as String, // Use phassphrase entered by the user.
            password: "raspberrypi",
            verbose: 'true') {
        fileset(dir: 'build/libs') {
            include(name: '*.jar')
        }
    }
}